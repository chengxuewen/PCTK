# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.23)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS pctk0::core pctk0::corePrivate)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target pctk0::core
add_library(pctk0::core SHARED IMPORTED)

set_target_properties(pctk0::core PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PCTK_CORE_LIB"
  INTERFACE_INCLUDE_DIRECTORIES "/Users/cxw/Documents/Code/Work/PCTK/PCTK/cmake-build-debug/include;/Users/cxw/Documents/Code/Work/PCTK/PCTK/cmake-build-debug/include/pctk_core"
  PCTK_DISABLED_PRIVATE_FEATURES ""
  PCTK_DISABLED_PUBLIC_FEATURES "LIBUV_BACKEND;ICU;STD_THREAD;TIMEZONE"
  PCTK_ENABLED_PRIVATE_FEATURES ""
  PCTK_ENABLED_PUBLIC_FEATURES "ENABLE_ASSERT;ENABLE_CHECK;ENABLE_DEBUG;ENABLE_VALGRIND;STD_ATOMIC;STD_TIME"
  _pctk_config_module_name "core"
  _pctk_is_public_module "TRUE"
  _pctk_module_has_headers "ON"
  _pctk_module_include_name "pctk_core"
  _pctk_module_interface_name "core"
  _pctk_package_name "pctk0core"
  _pctk_package_version "0.1.1"
  _pctk_private_module_target_name "corePrivate"
)

# Create imported target pctk0::corePrivate
add_library(pctk0::corePrivate INTERFACE IMPORTED)

set_target_properties(pctk0::corePrivate PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/Users/cxw/Documents/Code/Work/PCTK/PCTK/cmake-build-debug/pctk_core"
  INTERFACE_LINK_LIBRARIES "pctk0::core"
  _pctk_config_module_name "core_private"
  _pctk_is_private_module "TRUE"
  _pctk_package_name "pctk0core"
  _pctk_package_version "0.1.1"
  _pctk_public_module_target_name "core"
)

# Import target "pctk0::core" for configuration "Debug"
set_property(TARGET pctk0::core APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(pctk0::core PROPERTIES
  IMPORTED_LOCATION_DEBUG "/Users/cxw/Documents/Code/Work/PCTK/PCTK/cmake-build-debug/lib/libpctk0core_debug.0.1.1.dylib"
  IMPORTED_SONAME_DEBUG "@rpath/libpctk0core_debug.0.dylib"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
